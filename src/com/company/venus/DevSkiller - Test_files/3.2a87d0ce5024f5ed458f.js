(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./src/app/exam/pages/welcome-page/exam-terms.component.html":function(e,t){e.exports='\n<div class="modal-header">\n  <button type="button" class="close" ng-click="$ctrl.dismiss()">&times;</button>\n  <h4 class="modal-title">Assessment terms</h4>\n</div>\n\n<div class="modal-body">\n  <p>\n    <strong>This assessment is subject to copyright protection</strong> and by accessing the assessment you are obliged to accept the following regulations:</p>\n    <ol>\n      <li>You are prohibited to upload, post, e-mail, transmit, or otherwise make available any elements of the assessment outside of the assigned assessment. These restrictions also cover publishing or sharing in any way any part of questions, tasks, instructions or any other element of the assessment.</li>\n      <li>You are prohibited to use, reproduce, create derivative works of, distribute, publicly perform or publicly display any content that does not belong to you.</li>\n      <li>You confirm that during the assessment you will submit your own original work and/or you have all necessary rights to disclose these answers. In doing so, you are not violating the rights of any third party and you know of no other individual or entity whose rights will be infringed.</li>\n      <li>You will not consult or copy answers from any third-party, friend, colleague in order to complete this assessment.</li>\n      <li>You will not allow any third party to use the test link, code or repository access issued for this assessment.</li>\n      <li>This is an open book test. You can use any source of knowledge like books, blogs, and forums exactly as you would while on the job.</li>\n      <li>You agree that your personal data will be processed for assessment purposes.</li>\n      <li>We reserve the right to reject an assessment any time potential fraudulent activity is detected.</li>\n  </ol>\n  <p>\n    By accepting this agreement you acknowledge that you have read, understand and agree to be bound by its terms and conditions and you are aware that <strong>breaching of any of its regulations may have legal and financial consequences.</strong>\n  </p>\n</div>\n<div class="modal-footer">\n  <button dvsk-button ng-click="$ctrl.dismiss()">Close</button>\n</div>\n'},"./src/app/exam/pages/welcome-page/exam-welcome-page.component.html":function(e,t){e.exports='<form ng-if="!$ctrl.exam.finished" name="$ctrl.startTestForm" novalidate>\n  <div ng-if="!$ctrl.exam.containsCubiksTest" class="exam-welcome-page__layout" ng-show="!$ctrl.exam.finished">\n    <div class="exam-welcome-page__main">\n      <dvsk-section-box spacing="lg" class="welcome-block">\n        <dvsk-section-box-header>\n          <h1 class="m-0 font-weight-bold" style="font-size: 32px;">Welcome to DevSkiller!</h1>\n        </dvsk-section-box-header>\n\n        <test-introduction\n          item="$ctrl.testIntroduction"\n          exam="$ctrl.exam"\n        ></test-introduction>\n\n        <test-summary\n          ng-if="$ctrl.testSummary"\n          exam="$ctrl.exam"\n          task-type-stats="$ctrl.exam.taskTypeStats"\n        ></test-summary>\n      </dvsk-section-box>\n\n      <dvsk-section-box ng-if="$ctrl.items.length" spacing="lg" class="push-20-t welcome-block">\n        <div ng-repeat="item in $ctrl.items">\n          <candidate-input\n            ng-if="item.itemType == \'INPUT\'"\n            item="item"\n            exam="$ctrl.exam"\n            ng-model="item.value"\n          ></candidate-input>\n          <markdown-content\n            ng-if="item.itemType == \'STATIC\' && item.type == \'MARKDOWN\'"\n            item="item"\n            exam="$ctrl.exam"\n          ></markdown-content>\n        </div>\n      </dvsk-section-box>\n    </div>\n\n    <div class="exam-welcome-page__aside">\n      <dvsk-section-box>\n        <dvsk-section-box-header>\n          <div class="exam-welcome-page__video">\n            <h2 class="m-0 mb-4 font-weight-bold" style="font-size: 22px;">Get comfortable with <span style="color: #82b801;">Dev</span>Skiller</h2>\n            <div class="video-container">\n              <div class="embed-container">\n                <iframe src="//www.youtube.com/embed/KtHvypbq9Pk?rel=0" frameborder="0" allowfullscreen title="Candidates Test Preview - DevSkiller"></iframe>\n              </div>\n            </div>\n          </div>\n        </dvsk-section-box-header>\n\n        <exam-mobile-warning exam="$ctrl.exam"></exam-mobile-warning>\n\n        <div ng-if="$ctrl.isSpectator" class="text-center">\n          Waiting for candidate to start the test...\n        </div>\n\n        <div ng-if="!$ctrl.isSpectator" class="text-center">\n          <div class="form-group"\n              ng-class="{\'has-error\': !$ctrl.startTestForm.termsAgreement.$valid && ($ctrl.startTestForm.$submitted || !$ctrl.startTestForm.termsAgreement.$pristine)}">\n            <div class="checkbox">\n              <label>\n                <input name="termsAgreement" ng-model="termsAgreement" ng-required="true" type="checkbox" data-testid="checkbox-accept-terms">\n                I have read and accept\n                <span class="show-terms" ng-click="$ctrl.showTerms($event)" title="Opens in modal window">\n                  the terms of the assessment <i class="fa fa-window-restore" aria-hidden="true"></i>\n                </span>\n              </label>\n            </div>\n            <span class="help-block"\n                  ng-if="!$ctrl.startTestForm.termsAgreement.$valid && ($ctrl.startTestForm.$submitted || !$ctrl.startTestForm.termsAgreement.$pristine)">\n              <p>Please accept the terms of the assessment</p>\n            </span>\n          </div>\n\n          <div class="push-20 color-danger text-center" ng-if="$ctrl.exam.overlaysMaintenanceWindow">\n            <strong>\n              The candidate test interface is temporarily unavailable due to system maintenance.\n              <br/>\n              DevSkiller is expected to be down for about an hour starting at {{ $ctrl.exam.maintenanceWindowStart | localDateTime }}.\n              <br/>\n              We apologize for any inconvenience.\n            </strong>\n          </div>\n\n          <button\n            dvsk-button size="large" class="start-test-btn" loading="$ctrl.startingExam"\n            ng-disabled="$ctrl.exam.overlaysMaintenanceWindow || $ctrl.isTokenNotActive()"\n            ng-click="$ctrl.startExam()"\n            ng-focus="$ctrl.startExamInteraction()"\n            ng-mouseenter="$ctrl.startExamInteraction()"\n            type="submit"\n            data-testid="start-the-test"\n          >\n            <span>{{ $ctrl.exam.currentAssignment ? \'Continue the test\' : \'Start the test!\' }}</span>\n            <i class="fa fa-arrow-right" aria-hidden="true"></i>\n          </button>\n\n          <div class="exam-contents-provider push-20-t" ng-if="!$ctrl.isTokenNotActive()">\n            Test content provided by <strong>{{ $ctrl.exam.contentProviderName || \'DevSkiller\' }}</strong>\n          </div>\n          <div class="text-center" ng-if="$ctrl.isTokenNotActive()">\n            Test can be accessed in <token-activation-countdown end-date="$ctrl.exam.activationDate"></token-activation-countdown>\n          </div>\n\n        </div>\n      </dvsk-section-box>\n    </div>\n  </div>\n\n  <div ng-if="$ctrl.exam.containsCubiksTest" class="start-exam content-container">\n    <dvsk-section-box spacing="lg">\n      <dvsk-section-box-header>\n        <h1 class="m-0 font-weight-bold" style="font-size: 32px;">Welcome to DevSkiller!</h1>\n      </dvsk-section-box-header>\n      <div class="welcome-block">\n        <p>Please refer to the information for <a href="https://www.cubiks.com/legal/information-for-data-subjects">data\n          subjects</a> or any other notice/privacy policy provided to you by Cubiks for details on how Cubiks\n          processes your personal information on behalf of the data controller.\n        </p>\n        <div class="push-30-t text-center">\n          <div class="form-group"\n                ng-class="{\'has-error\': !$ctrl.startTestForm.termsAgreement.$valid && ($ctrl.startTestForm.$submitted || !$ctrl.startTestForm.termsAgreement.$pristine)}">\n            <div class="checkbox">\n              <label>\n                <input name="termsAgreement" ng-model="termsAgreement" ng-required="true" type="checkbox" data-testid="checkbox-accept-terms">\n                I have read and accept\n                <span class="show-terms" ng-click="$ctrl.showTerms($event)" title="Opens in modal window">\n                  the terms of the assessment <i class="fa fa-window-restore" aria-hidden="true"></i>\n                </span>\n              </label>\n            </div>\n            <span\n              class="help-block"\n              ng-if="!$ctrl.startTestForm.termsAgreement.$valid && ($ctrl.startTestForm.$submitted || !$ctrl.startTestForm.termsAgreement.$pristine)"\n            >\n              <p>Please accept the terms of the assessment</p>\n            </span>\n\n          </div>\n          <div class="push-20 color-danger text-center" ng-if="$ctrl.exam.overlaysMaintenanceWindow">\n            <strong>\n              The candidate test interface is temporarily unavailable due to system maintenance.\n              <br/>\n              DevSkiller is expected to be down for about an hour starting at {{ $ctrl.exam.maintenanceWindowStart | localDateTime }}.\n              <br/>\n              We apologize for any inconvenience.\n            </strong>\n          </div>\n\n          <button\n            dvsk-button size="large" class="start-test-btn" loading="$ctrl.startingExam"\n            ng-disabled="$ctrl.exam.overlaysMaintenanceWindow || $ctrl.isTokenNotActive() || $ctrl.isSFDisabled"\n            ng-click="$ctrl.startExam()"\n            ng-focus="$ctrl.startExamInteraction()"\n            ng-mouseenter="$ctrl.startExamInteraction()"\n            type="submit"\n            data-testid="start-the-test"\n          >\n            <span>{{ $ctrl.exam.currentAssignment ? \'Continue the test\' : \'Start the test!\' }}</span>\n            <i class="fa fa-arrow-right" aria-hidden="true"></i>\n          </button>\n          <p class="text-center color-danger font-s12" ng-if="$ctrl.startError">{{ $ctrl.startError }}</p>\n        </div>\n      </div>\n    </dvsk-section-box>\n  </div>\n</form>\n'},"./src/app/exam/pages/welcome-page/exam-welcome-page.component.less":function(e,t,n){"use strict";n.r(t)},"./src/app/exam/pages/welcome-page/exam-welcome.module.ts":function(e,t,n){"use strict";n.r(t),n.d(t,"ExamWelcomeModule",function(){return c});var s=n("./node_modules/angular/index.js"),a=n("./src/app/exam/layout/exam-layout.module.ts"),o={selector:"examTerms",template:n("./src/app/exam/pages/welcome-page/exam-terms.component.html"),bindings:{dismiss:"&"},controller:function(){}},i=n("./node_modules/moment/moment.js"),r={selector:"examWelcomePage",template:n("./src/app/exam/pages/welcome-page/exam-welcome-page.component.html"),styles:[n("./src/assets/styles/fonts/open-sans.less"),n("./src/app/exam/pages/welcome-page/exam-welcome-page.component.less")],bindings:{exam:"<",isSpectator:"<",onExamStart:"&"},controller:function(){function e(e,t,n,s,a,o,i){this.$q=e,this.$state=t,this.$env=n,this.$http=s,this.examService=a,this.dialogs=o,this.logger=i,this.termsAgreement=!1,this.startingExam=!1,this.isSFDisabled=!0,this.startError=""}return e.$inject=["$q","$state","$env","$http","examService","dialogs","logger"],e.prototype.$onInit=function(){if(this.logger.debug("Starting ExamWelcomePage",this.exam),this.exam.finished)return this.logger.debug("Exam is already finished, redirecting to exitPage"),void this.$state.go("exam.exitPage");this.checkSalesforceAvailability()},e.prototype.$onChanges=function(){var e=this.exam;this.testIntroduction=e.welcomePage.find(function(e){return"TEST_INTRODUCTION"===e.type})||{type:"TEST_INTRODUCTION"},this.testSummary=e.welcomePage.find(function(e){return"TEST_SUMMARY"===e.type}),this.items=e.welcomePage.filter(function(e){return!["TEST_INTRODUCTION","TEST_SUMMARY"].includes(e.type)})},e.prototype.checkSalesforceAvailability=function(){var e=this,t=this,n=t.exam,s=t.$http,a=t.$env;if(n.taskTypeStats.filter(function(e){return"PROGRAMMING"===e.taskType&&"SFSCRATCH"===e.projectType}).length>0)return this.logger.debug("[Salesforce] Checking availability."),s.get(a.apiUrl+"/exams/salesforceAvailability").then(function(){e.isSFDisabled=!1,e.logger.debug("[Salesforce] Available.")}).catch(function(){e.isSFDisabled=!0,e.startError="Currently no Salesforce slots are available. We are sorry for the inconvenience. Try another time or if problem continues please contact your recruiter for more information.",e.logger.error("[Salesforce] Unavailable.")});this.isSFDisabled=!1},e.prototype.isTokenNotActive=function(){var e=this.exam.activationDate;return!!e&&!!i(e).isAfter(i())},e.prototype.startExamInteraction=function(){this.examService.initScreenRecording("/")},e.prototype.startExam=function(){var e=this,t=this.$q;if(this.isTokenNotActive()||this.startingExam)return t.resolve(!1);if(this.startTestForm.$valid){this.startingExam=!0;var n={inputValues:this.exam.welcomePage.filter(function(e){return"INPUT"===e.itemType})};return t.when(this.onExamStart({$data:n})).catch(function(t){throw e.startingExam=!1,t})}return this.dialogs.error("Missing or invalid information","Please make sure all fields are filled out correctly before starting the test"),t.resolve(!1)},e.prototype.showTerms=function(e){e.stopPropagation(),e.preventDefault(),this.logger.debug("Showing terms dialog"),this.dialogs.open({component:o.selector,size:"lg",keyboard:!0,backdrop:"static",windowClass:"assessment-terms colored-header"})},e}()},l=n("./src/common/components/section-box/index.ts"),c=s.module("exam.welcome",[a.b,l.a]).component(o.selector,o).component(r.selector,r).name}}]);